Given an unsorted integer array, find the smallest missing positive integer.

Example 1:

Input: [1,2,0]
Output: 3
Example 2:

Input: [3,4,-1,1]
Output: 2
Example 3:

Input: [7,8,9,11,12]
Output: 1
Note:

Your algorithm should run in O(n) time and uses constant extra space.



class Solution {
public:
    int firstMissingPositive(vector<int>& nums)
    {
        if(nums.size()==0)
            return 1;
        vector<int>::iterator res;
        for(int i=0;i<nums.size();i++)
        {
            res=find(nums.begin(),nums.end(),i+1);
            if(res==nums.end())
                return i+1;
        }
       return nums.size()+1; 
    }
       
};
